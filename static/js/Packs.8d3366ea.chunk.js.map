{"version":3,"file":"static/js/Packs.8d3366ea.chunk.js","mappings":"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","sources":["webpack://react-cards/./src/pages/packs/Packs.module.scss?1097","store/selectors/packs.ts","pages/packs/Packs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Packs_container__Shc0U\",\"top\":\"Packs_top__RVEbs\",\"title\":\"Packs_title__aCFqi\",\"addNewPackBtn\":\"Packs_addNewPackBtn__nj-PJ\",\"main\":\"Packs_main__8DO3Q\",\"searchText\":\"Packs_searchText__EB6aR\",\"showPacksCards\":\"Packs_showPacksCards__Pv4ZL\",\"numberOfCards\":\"Packs_numberOfCards__rAZ4s\",\"sort\":\"Packs_sort__RAcax\",\"emptyItems\":\"Packs_emptyItems__H+9hP\"};","import { SelectedPackType } from './../slices/packs/types'\r\nimport { PackType } from 'api/packs/types'\r\nimport { RootStateType } from 'store'\r\n\r\nexport const selectPacks = (state: RootStateType): PackType[] => state.packs.packs\r\n\r\nexport const selectSearchPackValue = (state: RootStateType): string => state.packs.searchPackValue\r\n\r\nexport const selectSortPacks = (state: RootStateType): string => state.packs.sortPacks\r\n\r\nexport const selectMinValue = (state: RootStateType): number => state.packs.minValue\r\n\r\nexport const selectMaxValue = (state: RootStateType): number => state.packs.maxValue\r\n\r\nexport const selectMinCardsCount = (state: RootStateType): number => state.packs.minCardsCount\r\n\r\nexport const selectMaxCardsCount = (state: RootStateType): number => state.packs.maxCardsCount\r\n\r\nexport const selectPageCount = (state: RootStateType): number => state.packs.pageCount\r\n\r\nexport const selectPage = (state: RootStateType): number => state.packs.page\r\n\r\nexport const selectSelectedPack = (state: RootStateType): SelectedPackType => state.packs.selectedPack\r\n\r\nexport const selectPacksTotalCount = (state: RootStateType): number => state.packs.packsTotalCount\r\n","import React, { FC, useCallback, useEffect, useRef, useState } from 'react'\r\nimport { UniversalButton, ShowPacks, DoubleRange, Sort, Pagination, Search } from 'components'\r\nimport { Modal, ModalPack } from 'components/common'\r\nimport { Pack } from 'components/pack'\r\nimport { EMPTY_STRING, ERROR_MESSAGE } from 'constants/base'\r\nimport { Path } from 'enums'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { getPacks, addPack } from 'store/asyncActions'\r\nimport { setSearchPackValue, setSortPacks, setPackPage, setPackPageCount, setMinValue, setMaxValue } from 'store/slices'\r\nimport { ReturnComponentType } from 'types'\r\nimport style from './Packs.module.scss'\r\nimport {\r\n\tselectIsAuth,\r\n\tselectIsDisabled,\r\n\tselectPacks,\r\n\tselectSearchPackValue,\r\n\tselectSortPacks,\r\n\tselectMinValue,\r\n\tselectMaxValue,\r\n\tselectMinCardsCount,\r\n\tselectMaxCardsCount,\r\n\tselectAuthorizedUserId,\r\n\tselectSelectedPack,\r\n\tselectPageCount,\r\n\tselectPage,\r\n\tselectPacksTotalCount,\r\n\tselectIsLoading\r\n} from 'store/selectors'\r\n\r\nexport const Packs: FC = (): ReturnComponentType => {\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst isAuth = useSelector(selectIsAuth)\r\n\tconst isDisabled = useSelector(selectIsDisabled)\r\n\tconst isLoading = useSelector(selectIsLoading)\r\n\tconst packs = useSelector(selectPacks)\r\n\tconst searchPackValue = useSelector(selectSearchPackValue)\r\n\tconst sortPacks = useSelector(selectSortPacks)\r\n\tconst minValue = useSelector(selectMinValue)\r\n\tconst maxValue = useSelector(selectMaxValue)\r\n\tconst minCardsCount = useSelector(selectMinCardsCount)\r\n\tconst maxCardsCount = useSelector(selectMaxCardsCount)\r\n\tconst authorizedUserId = useSelector(selectAuthorizedUserId)\r\n\tconst selectedPack = useSelector(selectSelectedPack)\r\n\tconst pageCount = useSelector(selectPageCount)\r\n\tconst page = useSelector(selectPage)\r\n\tconst packsTotalCount = useSelector(selectPacksTotalCount)\r\n\r\n\tconst [isActiveModal, setIsActiveModal] = useState(false)\r\n\tconst [packName, setPackName] = useState(EMPTY_STRING)\r\n\tconst [isPackPrivate, setIsPackPrivate] = useState(false)\r\n\tconst [errorMessage, setErrorMessage] = useState(EMPTY_STRING)\r\n\r\n\tconst namePackInputRef = useRef<HTMLInputElement>(null)\r\n\tconst isMounted = useRef(false)\r\n\r\n\tconst sortPacksValues: string[] = ['Name', 'Cards', 'Last Updated', 'Created by']\r\n\tconst sortPacksByDescending: string[] = ['0name', '0cardsCount', '0updated', '0user_name']\r\n\tconst sortPacksByAscending: string[] = ['1name', '1cardsCount', '1updated', '1user_name']\r\n\tconst packsRender = packs.map(({ _id, name, cardsCount, updated, user_name, user_id }) => {\r\n\t\treturn (\r\n\t\t\t<Pack\r\n\t\t\t\tkey={_id}\r\n\t\t\t\tpackId={_id}\r\n\t\t\t\tuserId={user_id}\r\n\t\t\t\tpackName={name}\r\n\t\t\t\tcardsCount={cardsCount}\r\n\t\t\t\tpackUpdated={updated}\r\n\t\t\t\tuserName={user_name}\r\n\t\t\t\tisDisabled={isDisabled}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getPacks({\r\n\t\t\tpackName: searchPackValue,\r\n\t\t\tsortPacks,\r\n\t\t\tmin: minValue,\r\n\t\t\tmax: maxValue,\r\n\t\t\tpageCount,\r\n\t\t\tpage,\r\n\t\t\tuserId: authorizedUserId\r\n\t\t}))\r\n\t}, [searchPackValue, sortPacks, minValue, maxValue, pageCount, page, selectedPack])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (isMounted.current) {\r\n\t\t\twindow.scrollTo(0, 0)\r\n\t\t}\r\n\r\n\t\tisMounted.current = true\r\n\t}, [page, pageCount])\r\n\r\n\tconst handleSetSearchPackValueChange = useCallback((value: string): void => {\r\n\t\tdispatch(setSearchPackValue(value))\r\n\t}, [])\r\n\r\n\tconst handleResetSearchPackValueClick = useCallback((resetValue: string): void => {\r\n\t\tdispatch(setSearchPackValue(resetValue))\r\n\t}, [])\r\n\r\n\tconst handleSortPacksByAscendingClick = (value: string): void => {\r\n\t\tdispatch(setSortPacks(value))\r\n\t}\r\n\r\n\tconst handleSortPacksByDescendingClick = (value: string): void => {\r\n\t\tdispatch(setSortPacks(value))\r\n\t}\r\n\r\n\tconst handleSetPackPageClick = useCallback((page: number): void => {\r\n\t\tdispatch(setPackPage(page))\r\n\t}, [])\r\n\r\n\tconst handleSetPackPageCountChange = useCallback((pageCount: number): void => {\r\n\t\tdispatch(setPackPageCount(pageCount))\r\n\t}, [])\r\n\r\n\tconst resetModalValues = (): void => {\r\n\t\tsetIsActiveModal(false)\r\n\t\tsetPackName(EMPTY_STRING)\r\n\t\tsetIsPackPrivate(false)\r\n\t\tsetErrorMessage(EMPTY_STRING)\r\n\t}\r\n\r\n\tconst handleDeactivateModalClick = (): void => resetModalValues()\r\n\r\n\tconst handleActivateModalClick = (): void => {\r\n\t\tsetIsActiveModal(true)\r\n\t\tnamePackInputRef.current?.focus()\r\n\t}\r\n\r\n\tconst onAddPackClick = (): void => {\r\n\t\tconst packNameTrimmed = packName.trim()\r\n\r\n\t\tif (packNameTrimmed !== EMPTY_STRING) {\r\n\t\t\tdispatch(addPack({ authorizedUserId, packName: packNameTrimmed, isPackPrivate }))\r\n\t\t\tresetModalValues()\r\n\t\t} else {\r\n\t\t\tsetErrorMessage(ERROR_MESSAGE)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSetMaxValueMouseUp = useCallback((max: number): void => {\r\n\t\tdispatch(setMaxValue(max))\r\n\t}, [])\r\n\r\n\tconst handleSetMinValueMouseUp = useCallback((min: number): void => {\r\n\t\tdispatch(setMinValue(min))\r\n\t}, [])\r\n\r\n\tif (!isAuth) {\r\n\t\treturn <Navigate to={Path.LOGIN} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal isModalActive={isActiveModal} onDeactivateModalClick={handleDeactivateModalClick}>\r\n\t\t\t\t<ModalPack\r\n\t\t\t\t\tonDeactivateModalClick={handleDeactivateModalClick}\r\n\t\t\t\t\tsetUpdatedPackName={setPackName}\r\n\t\t\t\t\tsetIsPackPrivate={setIsPackPrivate}\r\n\t\t\t\t\tonSaveClick={onAddPackClick}\r\n\t\t\t\t\tvalue={packName}\r\n\t\t\t\t\tisPackPrivate={isPackPrivate}\r\n\t\t\t\t\tisLabelItem={true}\r\n\t\t\t\t\terrorMessage={errorMessage}\r\n\t\t\t\t\tsetErrorMessage={setErrorMessage}\r\n\t\t\t\t\tref={namePackInputRef}\r\n\t\t\t\t\ttitle={'Add new pack'}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<div className={style.top}>\r\n\t\t\t\t\t<h2 className={style.title}>Packs list</h2>\r\n\t\t\t\t\t<UniversalButton\r\n\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\tadditionalPrimaryBtn={style.addNewPackBtn}\r\n\t\t\t\t\t\tonClick={handleActivateModalClick}\r\n\t\t\t\t\t\tdisabled={isDisabled}>\r\n\t\t\t\t\t\tAdd new pack\r\n\t\t\t\t\t</UniversalButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.main}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className={style.searchText}>Search</div>\r\n\t\t\t\t\t\t<Search\r\n\t\t\t\t\t\t\tsearchValue={searchPackValue}\r\n\t\t\t\t\t\t\tisDisabled={isDisabled}\r\n\t\t\t\t\t\t\thandleSetSearchValueChange={handleSetSearchPackValueChange}\r\n\t\t\t\t\t\t\thandleResetSearchValueClick={handleResetSearchPackValueClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className={style.showPacksCards}>Show packs cards</div>\r\n\t\t\t\t\t\t<ShowPacks selectedPack={selectedPack} isDisabled={isDisabled} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className={style.numberOfCards}>Number of cards</div>\r\n\t\t\t\t\t\t<DoubleRange\r\n\t\t\t\t\t\t\tmax={maxValue}\r\n\t\t\t\t\t\t\tmin={minValue}\r\n\t\t\t\t\t\t\tmaxDefaultValue={maxCardsCount}\r\n\t\t\t\t\t\t\tminDefaultValue={minCardsCount}\r\n\t\t\t\t\t\t\tsetMaxValueMouseUp={handleSetMaxValueMouseUp}\r\n\t\t\t\t\t\t\tsetMinValueMouseUp={handleSetMinValueMouseUp}\r\n\t\t\t\t\t\t\tisDisabled={isDisabled}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.sort}>\r\n\t\t\t\t\t<Sort\r\n\t\t\t\t\t\tsortValues={sortPacksValues}\r\n\t\t\t\t\t\tsortByDescending={sortPacksByDescending}\r\n\t\t\t\t\t\tsortByAscending={sortPacksByAscending}\r\n\t\t\t\t\t\tsortValue={sortPacks}\r\n\t\t\t\t\t\thandleSortByAscendingClick={handleSortPacksByAscendingClick}\r\n\t\t\t\t\t\thandleSortByDescendingClick={handleSortPacksByDescendingClick}\r\n\t\t\t\t\t\tisDisabled={isDisabled}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={style.actions}>Actions</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{packs.length\r\n\t\t\t\t\t? packsRender\r\n\t\t\t\t\t: !isLoading && <h2 className={style.emptyItems}>No packs</h2>}\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\tpage={page}\r\n\t\t\t\t\thandleSetPageClick={handleSetPackPageClick}\r\n\t\t\t\t\thandleSetPageCountChange={handleSetPackPageCountChange}\r\n\t\t\t\t\ttotalItemsCount={packsTotalCount}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"names":["selectPacks","state","packs","selectSearchPackValue","searchPackValue","selectSortPacks","sortPacks","selectMinValue","minValue","selectMaxValue","maxValue","selectMinCardsCount","minCardsCount","selectMaxCardsCount","maxCardsCount","selectPageCount","pageCount","selectPage","page","selectSelectedPack","selectedPack","selectPacksTotalCount","packsTotalCount","Packs","dispatch","useAppDispatch","isAuth","useSelector","selectIsAuth","isDisabled","selectIsDisabled","isLoading","selectIsLoading","authorizedUserId","selectAuthorizedUserId","useState","isActiveModal","setIsActiveModal","EMPTY_STRING","packName","setPackName","isPackPrivate","setIsPackPrivate","errorMessage","setErrorMessage","namePackInputRef","useRef","isMounted","packsRender","map","_id","name","cardsCount","updated","user_name","user_id","packId","userId","packUpdated","userName","useEffect","getPacks","min","max","current","window","scrollTo","handleSetSearchPackValueChange","useCallback","value","setSearchPackValue","handleResetSearchPackValueClick","resetValue","handleSetPackPageClick","setPackPage","handleSetPackPageCountChange","setPackPageCount","resetModalValues","handleDeactivateModalClick","handleSetMaxValueMouseUp","setMaxValue","handleSetMinValueMouseUp","setMinValue","isModalActive","onDeactivateModalClick","setUpdatedPackName","onSaveClick","packNameTrimmed","trim","addPack","ERROR_MESSAGE","isLabelItem","ref","title","className","style","primary","additionalPrimaryBtn","onClick","focus","disabled","searchValue","handleSetSearchValueChange","handleResetSearchValueClick","maxDefaultValue","minDefaultValue","setMaxValueMouseUp","setMinValueMouseUp","sortValues","sortByDescending","sortByAscending","sortValue","handleSortByAscendingClick","setSortPacks","handleSortByDescendingClick","length","handleSetPageClick","handleSetPageCountChange","totalItemsCount","to","Path"],"sourceRoot":""}