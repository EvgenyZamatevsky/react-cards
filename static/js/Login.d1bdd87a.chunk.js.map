{"version":3,"file":"static/js/Login.d1bdd87a.chunk.js","mappings":"ySACA,EAAwB,qBAAxB,EAAyD,yBAAzD,EAAyF,oBAAzF,EAAsH,sBAAtH,EAAwJ,yBAAxJ,EAA0M,sCAA1M,EAAgQ,6BAAhQ,EAAmT,mCAAnT,EAAmW,0BAAnW,EAAqY,qBAArY,EAAmb,sCAAnb,EAAqf,yCAArf,EAAqiB,oBAAriB,EAAikB,qBAAjkB,EAA2mB,kCAA3mB,EAA0pB,0BAA1pB,EAA2rB,oBAA3rB,EAA8tB,4B,SCajtBA,EAAY,WAExB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IACrBC,GAAaF,EAAAA,EAAAA,IAAYG,EAAAA,IACzBC,GAAaJ,EAAAA,EAAAA,IAAYK,EAAAA,IAE/B,GAAwCC,EAAAA,EAAAA,UAAS,YAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEA,GAAmEC,EAAAA,EAAAA,IAAyB,CAC3FC,KAAM,WACNC,cAAe,CAAEC,MAAO,oBAAqBC,SAAU,YAAaC,YAAY,KAFzEC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAlB,IAAgCC,UAAaC,EAA7C,EAA6CA,OAAQC,EAArD,EAAqDA,QA6BrD,OAAIpB,GACI,SAAC,KAAD,CAAUqB,GAAIC,EAAAA,EAAAA,QAIrB,gBAAKC,UAAWC,EAAhB,UACC,iBAAKD,UAAWC,EAAhB,WACC,eAAID,UAAWC,EAAf,sBACA,kBAAMD,UAAWC,EAAYC,SAAUR,GAZO,SAACS,GACjD5B,GAAS6B,EAAAA,EAAAA,IAAMD,OAWb,WACC,iBAAKH,UAAWC,EAAhB,WACC,0BAAOD,UAAWC,EAAkBI,KAAK,QAAQC,YAAY,QAAQC,SAAU3B,GAC1Ea,EAAS,QAlCG,CACrBe,SAAU,qBACVC,QAAS,CACRC,MAAO,8DACPC,QAAS,yBA+BC,OAANf,QAAM,IAANA,OAAA,EAAAA,EAAQN,SAAS,cAAGU,UAAWC,EAAd,gBAA6CL,QAA7C,IAA6CA,OAA7C,EAA6CA,EAAQN,MAAMqB,cAE9E,iBAAKX,UAAWC,EAAhB,WACC,0BAAOD,UAAWC,EAAqBI,KAAMpB,EAAcqB,YAAY,WAAWC,SAAU3B,GACvFa,EAAS,WA/BM,CACxBe,SAAU,qBACVI,UAAW,CAAEF,MAAO,EAAGC,QAAS,0BA8BrB,OAANf,QAAM,IAANA,OAAA,EAAAA,EAAQL,YAAY,cAAGS,UAAWC,EAAd,gBAAgDL,QAAhD,IAAgDA,OAAhD,EAAgDA,EAAQL,SAASoB,WACtF,SAAC,KAAD,CAAK1B,aAAcA,EAAcC,gBAAiBA,QAEnD,iBAAKc,UAAWC,EAAhB,WACC,mBAAOD,UAAWC,EAAlB,WACC,0BAAOD,UAAWC,EAA0BI,KAAK,WAAWE,SAAU3B,GACjEa,EAAS,gBAFf,kBAKA,SAAC,KAAD,CACCK,GAAIC,EAAAA,EAAAA,OACJC,UAAS,UAAKC,EAAL,YAAyBrB,GAAcqB,GAFjD,kCAOD,iBAAKD,UAAWC,EAAhB,WACC,SAAC,KAAD,CAAiBY,SAAO,EAACR,KAAK,SAASE,UAAWV,EAAlD,sBACA,gBAAKG,UAAWC,EAAhB,0CACA,SAAC,KAAD,CACCH,GAAIC,EAAAA,EAAAA,SACJe,QAhDuB,WACxBhC,GACHP,GAASwC,EAAAA,EAAAA,KAAc,KA+CnBf,UAAS,UAAKC,EAAL,YAAwBrB,GAAcqB,GAHhD","sources":["webpack://react-cards/./src/pages/login/Login.module.scss?ba59","pages/login/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login\":\"Login_login__qDBrW\",\"container\":\"Login_container__u405m\",\"form\":\"Login_form__J3ge2\",\"bottom\":\"Login_bottom__pCXos\",\"signUpBtn\":\"Login_signUpBtn__B7C14\",\"passwordInputContainer\":\"Login_passwordInputContainer__PWzbk\",\"passwordInput\":\"Login_passwordInput__7wY+y\",\"emailInputContainer\":\"Login_emailInputContainer__J-Org\",\"emailInput\":\"Login_emailInput__I0Z0-\",\"title\":\"Login_title__F4pvt\",\"errorMessageEmailInput\":\"Login_errorMessageEmailInput__ENZh3\",\"errorMessagePasswordInput\":\"Login_errorMessagePasswordInput__A6DzG\",\"body\":\"Login_body__3htfg\",\"label\":\"Login_label__iqb9M\",\"rememberMeCheckbox\":\"Login_rememberMeCheckbox__tHEj6\",\"forgotLink\":\"Login_forgotLink__ht5yG\",\"text\":\"Login_text__UkGFr\",\"disabledLink\":\"Login_disabledLink__K07um\"};","import React, { FC, useState } from 'react'\r\nimport { Eye, UniversalButton } from 'components'\r\nimport { Path } from 'enums'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { useForm, SubmitHandler } from 'react-hook-form'\r\nimport { useSelector } from 'react-redux'\r\nimport { Navigate, Link } from 'react-router-dom'\r\nimport { login } from 'store/asyncActions'\r\nimport { selectIsAuth, selectIsDisabled, selectIsRegister } from 'store/selectors'\r\nimport { setIsRegister } from 'store/slices'\r\nimport { ReturnComponentType } from 'types'\r\nimport { LoginParamsType } from './types'\r\nimport style from './Login.module.scss'\r\n\r\nexport const Login: FC = (): ReturnComponentType => {\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst isAuth = useSelector(selectIsAuth)\r\n\tconst isDisabled = useSelector(selectIsDisabled)\r\n\tconst isRegister = useSelector(selectIsRegister)\r\n\r\n\tconst [typePassword, setTypePassword] = useState('password')\r\n\r\n\tconst { register, handleSubmit, formState: { errors, isValid } } = useForm<LoginParamsType>({\r\n\t\tmode: 'onChange',\r\n\t\tdefaultValues: { email: 'nya-admin@nya.nya', password: '1qazxcvBG', rememberMe: false }\r\n\t},\r\n\t)\r\n\r\n\tconst emailSettings = {\r\n\t\trequired: 'Field is required!',\r\n\t\tpattern: {\r\n\t\t\tvalue: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\r\n\t\t\tmessage: 'Incorrect email!',\r\n\t\t}\r\n\t}\r\n\r\n\tconst passwordSettings = {\r\n\t\trequired: 'Field is required!',\r\n\t\tminLength: { value: 8, message: 'Min 8 characters!' },\r\n\t}\r\n\r\n\tconst onSetIsRegisterClick = (): void => {\r\n\t\tif (isRegister) {\r\n\t\t\tdispatch(setIsRegister(false))\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit: SubmitHandler<LoginParamsType> = (data): void => {\r\n\t\tdispatch(login(data))\r\n\t}\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Navigate to={Path.HOME} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.login}>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<h2 className={style.title}>Sign in</h2>\r\n\t\t\t\t<form className={style.form} onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t\t<div className={style.emailInputContainer}>\r\n\t\t\t\t\t\t<input className={style.emailInput} type='email' placeholder='Email' disabled={isDisabled}\r\n\t\t\t\t\t\t\t{...register('email', emailSettings)} />\r\n\t\t\t\t\t\t{errors?.email && <p className={style.errorMessageEmailInput}>{errors?.email.message}</p>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.passwordInputContainer}>\r\n\t\t\t\t\t\t<input className={style.passwordInput} type={typePassword} placeholder='Password' disabled={isDisabled}\r\n\t\t\t\t\t\t\t{...register('password', passwordSettings)} />\r\n\t\t\t\t\t\t{errors?.password && <p className={style.errorMessagePasswordInput}>{errors?.password.message}</p>}\r\n\t\t\t\t\t\t<Eye typePassword={typePassword} setTypePassword={setTypePassword} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.body}>\r\n\t\t\t\t\t\t<label className={style.label}>\r\n\t\t\t\t\t\t\t<input className={style.rememberMeCheckbox} type='checkbox' disabled={isDisabled}\r\n\t\t\t\t\t\t\t\t{...register('rememberMe')} />\r\n\t\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={Path.FORGOT}\r\n\t\t\t\t\t\t\tclassName={`${style.forgotLink} ${isDisabled && style.disabledLink}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tForgot Password?\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={style.bottom}>\r\n\t\t\t\t\t\t<UniversalButton primary type='submit' disabled={!isValid}>Sign in</UniversalButton>\r\n\t\t\t\t\t\t<div className={style.text}>Donâ€™t have an account?</div>\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={Path.REGISTER}\r\n\t\t\t\t\t\t\tonClick={onSetIsRegisterClick}\r\n\t\t\t\t\t\t\tclassName={`${style.signUpBtn} ${isDisabled && style.disabledLink}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n"],"names":["Login","dispatch","useAppDispatch","isAuth","useSelector","selectIsAuth","isDisabled","selectIsDisabled","isRegister","selectIsRegister","useState","typePassword","setTypePassword","useForm","mode","defaultValues","email","password","rememberMe","register","handleSubmit","formState","errors","isValid","to","Path","className","style","onSubmit","data","login","type","placeholder","disabled","required","pattern","value","message","minLength","primary","onClick","setIsRegister"],"sourceRoot":""}