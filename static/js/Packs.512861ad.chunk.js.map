{"version":3,"file":"static/js/Packs.512861ad.chunk.js","mappings":"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","sources":["webpack://react-cards/./src/components/pack/Pack.module.scss?30cb","components/pack/Pack.tsx","webpack://react-cards/./src/pages/packs/Packs.module.scss?1097","store/selectors/packs.ts","pages/packs/Packs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Pack_container__5O9xN\",\"list\":\"Pack_list__9X9AP\",\"name\":\"Pack_name__-WpXI\",\"cardsCount\":\"Pack_cardsCount__q8tHJ\",\"updated\":\"Pack_updated__DLk6N\",\"userName\":\"Pack_userName__SOjrz\"};","import React, { FC, useRef, useState } from 'react'\r\nimport { removePack, updatePackName } from 'store/asyncActions/packs'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { ReturnComponentType } from 'types'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectAuthorizedUserId } from 'store/selectors'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Path } from 'enums'\r\nimport { Actions } from 'components/common/actions'\r\nimport { convertDate } from 'utils'\r\nimport { Modal, ModalDelete, ModalPack } from 'components/common/modals'\r\nimport { EMPTY_STRING, ERROR_MESSAGE } from 'constants/base'\r\nimport { PackPropsType } from './types'\r\nimport { UniversalButton } from 'components/common/universalButton'\r\nimport style from './Pack.module.scss'\r\n\r\nexport const Pack: FC<PackPropsType> =\r\n\t({ userId, userName, packId, packName, cardsCount, packUpdated, isDisabled }): ReturnComponentType => {\r\n\r\n\t\tconst dispatch = useAppDispatch()\r\n\r\n\t\tconst navigate = useNavigate()\r\n\r\n\t\tconst authorizedUserId = useSelector(selectAuthorizedUserId)\r\n\r\n\t\tconst [isPackModalActive, setIsPackModalActive] = useState(false)\r\n\t\tconst [isDeleteModalActive, setIsDeleteModalActive] = useState(false)\r\n\t\tconst [updatedPackName, setUpdatedPackName] = useState(EMPTY_STRING)\r\n\t\tconst [errorMessage, setErrorMessage] = useState(EMPTY_STRING)\r\n\r\n\t\tconst updatedPackNameInputRef = useRef<HTMLInputElement>(null)\r\n\r\n\t\tconst isOwner = authorizedUserId === userId\r\n\r\n\t\tconst resetPackModalValues = (): void => {\r\n\t\t\tsetIsPackModalActive(false)\r\n\t\t\tsetErrorMessage(EMPTY_STRING)\r\n\r\n\t\t\tif (updatedPackName !== packName) {\r\n\t\t\t\tsetUpdatedPackName(packName)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst handleRemovePackClick = (): void => {\r\n\t\t\tdispatch(removePack({ packId, authorizedUserId: userId }))\r\n\t\t\tsetIsDeleteModalActive(false)\r\n\t\t}\r\n\r\n\t\tconst handleUpdatePackNameClick = (): void => {\r\n\t\t\tconst updatedPackNameTrimmed = updatedPackName.trim()\r\n\t\t\tconst packNameTrimmed = packName.trim()\r\n\r\n\t\t\tif (updatedPackNameTrimmed !== EMPTY_STRING) {\r\n\t\t\t\tif (updatedPackNameTrimmed !== packNameTrimmed) {\r\n\t\t\t\t\tdispatch(updatePackName({ authorizedUserId: userId, packId, updatedPackName: updatedPackNameTrimmed }))\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetIsPackModalActive(false)\r\n\t\t\t} else {\r\n\t\t\t\tsetErrorMessage(ERROR_MESSAGE)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst handleDeactivatePackModalClick = (): void => resetPackModalValues()\r\n\r\n\t\tconst handleDeactivateDeleteModalClick = (): void => setIsDeleteModalActive(false)\r\n\r\n\t\tconst handleActivatePackModalClick = (): void => {\r\n\t\t\tsetIsPackModalActive(true)\r\n\t\t\tsetUpdatedPackName(packName)\r\n\t\t\tupdatedPackNameInputRef.current?.focus()\r\n\t\t}\r\n\r\n\t\tconst handleActivateDeleteModalClick = (): void => setIsDeleteModalActive(true)\r\n\r\n\t\tconst onGoToCardsPageClick = (): void => {\r\n\t\t\tnavigate(`${Path.CARDS}/${packId}`)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Modal isModalActive={isPackModalActive} onDeactivateModalClick={handleDeactivatePackModalClick}>\r\n\t\t\t\t\t<ModalPack\r\n\t\t\t\t\t\tvalue={updatedPackName}\r\n\t\t\t\t\t\tsetUpdatedPackName={setUpdatedPackName}\r\n\t\t\t\t\t\tonDeactivateModalClick={handleDeactivatePackModalClick}\r\n\t\t\t\t\t\tonSaveClick={handleUpdatePackNameClick}\r\n\t\t\t\t\t\ttitle={'Edit pack'}\r\n\t\t\t\t\t\terrorMessage={errorMessage}\r\n\t\t\t\t\t\tsetErrorMessage={setErrorMessage}\r\n\t\t\t\t\t\tref={updatedPackNameInputRef}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal isModalActive={isDeleteModalActive} onDeactivateModalClick={handleDeactivateDeleteModalClick}>\r\n\t\t\t\t\t<ModalDelete\r\n\t\t\t\t\t\ttitle={'Delete Pack'}\r\n\t\t\t\t\t\tname={packName}\r\n\t\t\t\t\t\tonDeactivateModalClick={handleDeactivateDeleteModalClick}\r\n\t\t\t\t\t\tonDeleteClick={handleRemovePackClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<div className={style.container}>\r\n\t\t\t\t\t<div className={style.list}>\r\n\t\t\t\t\t\t<UniversalButton\r\n\t\t\t\t\t\t\tclassName={style.name}\r\n\t\t\t\t\t\t\tonClick={onGoToCardsPageClick}\r\n\t\t\t\t\t\t\tdisabled={isDisabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{packName}\r\n\t\t\t\t\t\t</UniversalButton>\r\n\t\t\t\t\t\t<div className={style.cardsCount}>{cardsCount}</div>\r\n\t\t\t\t\t\t<div className={style.updated}>{convertDate(packUpdated)}</div>\r\n\t\t\t\t\t\t<div className={style.userName}>{userName}</div>\r\n\t\t\t\t\t\t<Actions\r\n\t\t\t\t\t\t\tonActivateDeleteModalClick={handleActivateDeleteModalClick}\r\n\t\t\t\t\t\t\tonActivateEditModalClick={handleActivatePackModalClick}\r\n\t\t\t\t\t\t\tcardsCount={cardsCount}\r\n\t\t\t\t\t\t\tpackId={packId}\r\n\t\t\t\t\t\t\tisOwner={isOwner}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Packs_container__Shc0U\",\"top\":\"Packs_top__RVEbs\",\"title\":\"Packs_title__aCFqi\",\"addNewPackBtn\":\"Packs_addNewPackBtn__nj-PJ\",\"main\":\"Packs_main__8DO3Q\",\"sort\":\"Packs_sort__RAcax\",\"emptyItems\":\"Packs_emptyItems__H+9hP\"};","import { SelectedPackType } from './../slices/packs/types'\r\nimport { PackType } from 'api/packs/types'\r\nimport { RootStateType } from 'store'\r\n\r\nexport const selectPacks = (state: RootStateType): PackType[] => state.packs.packs\r\n\r\nexport const selectSearchPackValue = (state: RootStateType): string => state.packs.searchPackValue\r\n\r\nexport const selectSortValue = (state: RootStateType): string => state.packs.sortValue\r\n\r\nexport const selectMinValue = (state: RootStateType): number => state.packs.minValue\r\n\r\nexport const selectMaxValue = (state: RootStateType): number => state.packs.maxValue\r\n\r\nexport const selectMinCardsCount = (state: RootStateType): number => state.packs.minCardsCount\r\n\r\nexport const selectMaxCardsCount = (state: RootStateType): number => state.packs.maxCardsCount\r\n\r\nexport const selectPageCount = (state: RootStateType): number => state.packs.pageCount\r\n\r\nexport const selectPage = (state: RootStateType): number => state.packs.page\r\n\r\nexport const selectSelectedPack = (state: RootStateType): SelectedPackType => state.packs.selectedPack\r\n\r\nexport const selectPacksTotalCount = (state: RootStateType): number => state.packs.packsTotalCount\r\n","import React, { ChangeEvent, FC, useCallback, useEffect, useRef, useState } from 'react'\r\nimport { UniversalButton, ShowPacks, DoubleRange, Sort, Pagination, Search } from 'components'\r\nimport { Modal, ModalPack } from 'components/common'\r\nimport { Pack } from 'components/pack'\r\nimport { EMPTY_STRING, ERROR_MESSAGE } from 'constants/base'\r\nimport { Path } from 'enums'\r\nimport { useAppDispatch } from 'hooks'\r\nimport { useSelector } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { getPacks, addPack } from 'store/asyncActions'\r\nimport { setMaxAndMinValue, setSearchPackValue, setSortValue, setPackPage, setPackPageCount } from 'store/slices'\r\nimport { ReturnComponentType } from 'types'\r\nimport style from './Packs.module.scss'\r\nimport {\r\n\tselectIsAuth,\r\n\tselectIsDisabled,\r\n\tselectPacks,\r\n\tselectSearchPackValue,\r\n\tselectSortValue,\r\n\tselectMinValue,\r\n\tselectMaxValue,\r\n\tselectMinCardsCount,\r\n\tselectMaxCardsCount,\r\n\tselectAuthorizedUserId,\r\n\tselectSelectedPack,\r\n\tselectPageCount,\r\n\tselectPage,\r\n\tselectPacksTotalCount\r\n} from 'store/selectors'\r\n\r\nexport const Packs: FC = (): ReturnComponentType => {\r\n\r\n\tconst dispatch = useAppDispatch()\r\n\r\n\tconst isAuth = useSelector(selectIsAuth)\r\n\tconst isDisabled = useSelector(selectIsDisabled)\r\n\tconst packs = useSelector(selectPacks)\r\n\tconst searchPackValue = useSelector(selectSearchPackValue)\r\n\tconst sortValue = useSelector(selectSortValue)\r\n\tconst minValue = useSelector(selectMinValue)\r\n\tconst maxValue = useSelector(selectMaxValue)\r\n\tconst minCardsCount = useSelector(selectMinCardsCount)\r\n\tconst maxCardsCount = useSelector(selectMaxCardsCount)\r\n\tconst authorizedUserId = useSelector(selectAuthorizedUserId)\r\n\tconst selectedPack = useSelector(selectSelectedPack)\r\n\tconst pageCount = useSelector(selectPageCount)\r\n\tconst page = useSelector(selectPage)\r\n\tconst packsTotalCount = useSelector(selectPacksTotalCount)\r\n\r\n\tconst [isActiveModal, setIsActiveModal] = useState(false)\r\n\tconst [packName, setPackName] = useState(EMPTY_STRING)\r\n\tconst [isPackPrivate, setIsPackPrivate] = useState(false)\r\n\tconst [errorMessage, setErrorMessage] = useState(EMPTY_STRING)\r\n\r\n\tconst namePackInputRef = useRef<HTMLInputElement>(null)\r\n\r\n\tconst sortPacksValues: string[] = ['Name', 'Cards', 'Last Updated', 'Created by']\r\n\tconst sortPacksByDescending: string[] = ['0name', '0cardsCount', '0updated', '0user_name']\r\n\tconst sortPacksByAscending: string[] = ['1name', '1cardsCount', '1updated', '1user_name']\r\n\r\n\tconst packsRender = packs.map(({ _id, name, cardsCount, updated, user_name, user_id }) => {\r\n\t\treturn (\r\n\t\t\t<Pack\r\n\t\t\t\tkey={_id}\r\n\t\t\t\tpackId={_id}\r\n\t\t\t\tuserId={user_id}\r\n\t\t\t\tpackName={name}\r\n\t\t\t\tcardsCount={cardsCount}\r\n\t\t\t\tpackUpdated={updated}\r\n\t\t\t\tuserName={user_name}\r\n\t\t\t\tisDisabled={isDisabled}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getPacks({\r\n\t\t\tpackName: searchPackValue,\r\n\t\t\tsortPacks: sortValue,\r\n\t\t\tmin: minValue,\r\n\t\t\tmax: maxValue,\r\n\t\t\tpageCount,\r\n\t\t\tpage,\r\n\t\t\tuserId: authorizedUserId\r\n\t\t}))\r\n\t}, [searchPackValue, sortValue, minValue, maxValue, pageCount, page, selectedPack])\r\n\r\n\tconst handleSetMinAndMaxValueMouseUp = useCallback(({ min, max }: { min: number, max: number }): void => {\r\n\t\tdispatch(setMaxAndMinValue({ max, min }))\r\n\t}, [])\r\n\r\n\tconst handleSetSearchPackValueChange = (value: string): void => {\r\n\t\tdispatch(setSearchPackValue(value))\r\n\t}\r\n\r\n\tconst handleResetSearchPackValueClick = (resetValue: string): void => {\r\n\t\tdispatch(setSearchPackValue(resetValue))\r\n\t}\r\n\r\n\tconst handleSortPacksByAscendingClick = (value: string): void => {\r\n\t\tdispatch(setSortValue(value))\r\n\t}\r\n\r\n\tconst handleSortPacksByDescendingClick = (value: string): void => {\r\n\t\tdispatch(setSortValue(value))\r\n\t}\r\n\r\n\tconst handleSetPackPageClick = (page: number): void => {\r\n\t\tdispatch(setPackPage(page))\r\n\t}\r\n\r\n\tconst handleSetPackPageCountChange = (pageCount: number): void => {\r\n\t\tdispatch(setPackPageCount(pageCount))\r\n\t}\r\n\r\n\tconst resetModalValues = (): void => {\r\n\t\tsetIsActiveModal(false)\r\n\t\tsetPackName(EMPTY_STRING)\r\n\t\tsetIsPackPrivate(false)\r\n\t\tsetErrorMessage(EMPTY_STRING)\r\n\t}\r\n\r\n\tconst handleDeactivateModalClick = (): void => resetModalValues()\r\n\r\n\tconst handleActivateModalClick = (): void => {\r\n\t\tsetIsActiveModal(true)\r\n\t\tnamePackInputRef.current?.focus()\r\n\t}\r\n\r\n\tconst onAddPackClick = (): void => {\r\n\t\tconst packNameTrimmed = packName.trim()\r\n\r\n\t\tif (packNameTrimmed !== EMPTY_STRING) {\r\n\t\t\tdispatch(addPack({ authorizedUserId, packName: packNameTrimmed, isPackPrivate }))\r\n\t\t\tresetModalValues()\r\n\t\t} else {\r\n\t\t\tsetErrorMessage(ERROR_MESSAGE)\r\n\t\t}\r\n\t}\r\n\r\n\tif (!isAuth) {\r\n\t\treturn <Navigate to={Path.LOGIN} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Modal isModalActive={isActiveModal} onDeactivateModalClick={handleDeactivateModalClick}>\r\n\t\t\t\t<ModalPack\r\n\t\t\t\t\tonDeactivateModalClick={handleDeactivateModalClick}\r\n\t\t\t\t\tsetUpdatedPackName={setPackName}\r\n\t\t\t\t\tsetIsPackPrivate={setIsPackPrivate}\r\n\t\t\t\t\tonSaveClick={onAddPackClick}\r\n\t\t\t\t\tvalue={packName}\r\n\t\t\t\t\tisPackPrivate={isPackPrivate}\r\n\t\t\t\t\tisLabelItem={true}\r\n\t\t\t\t\terrorMessage={errorMessage}\r\n\t\t\t\t\tsetErrorMessage={setErrorMessage}\r\n\t\t\t\t\tref={namePackInputRef}\r\n\t\t\t\t\ttitle={'Add new pack'}\r\n\t\t\t\t/>\r\n\t\t\t</Modal>\r\n\t\t\t<div className={style.container}>\r\n\t\t\t\t<div className={style.top}>\r\n\t\t\t\t\t<h2 className={style.title}>Packs list</h2>\r\n\t\t\t\t\t<UniversalButton\r\n\t\t\t\t\t\tprimary\r\n\t\t\t\t\t\tadditionalPrimaryBtn={style.addNewPackBtn}\r\n\t\t\t\t\t\tonClick={handleActivateModalClick}\r\n\t\t\t\t\t\tdisabled={isDisabled}>\r\n\t\t\t\t\t\tAdd new pack\r\n\t\t\t\t\t</UniversalButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.main}>\r\n\t\t\t\t\t<Search\r\n\t\t\t\t\t\ttitle={'Search'}\r\n\t\t\t\t\t\tsearchValue={searchPackValue}\r\n\t\t\t\t\t\thandleSetSearchValueChange={handleSetSearchPackValueChange}\r\n\t\t\t\t\t\thandleResetSearchValueClick={handleResetSearchPackValueClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ShowPacks selectedPack={selectedPack} />\r\n\t\t\t\t\t<DoubleRange\r\n\t\t\t\t\t\tmax={maxValue}\r\n\t\t\t\t\t\tmin={minValue}\r\n\t\t\t\t\t\tmaxDefaultValue={maxCardsCount}\r\n\t\t\t\t\t\tminDefaultValue={minCardsCount}\r\n\t\t\t\t\t\tonSetMinAndMaxValueMouseUp={handleSetMinAndMaxValueMouseUp}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={style.sort}>\r\n\t\t\t\t\t<Sort\r\n\t\t\t\t\t\tsortValues={sortPacksValues}\r\n\t\t\t\t\t\tsortByDescending={sortPacksByDescending}\r\n\t\t\t\t\t\tsortByAscending={sortPacksByAscending}\r\n\t\t\t\t\t\tsortValue={sortValue}\r\n\t\t\t\t\t\thandleSortByAscendingClick={handleSortPacksByAscendingClick}\r\n\t\t\t\t\t\thandleSortByDescendingClick={handleSortPacksByDescendingClick}\r\n\t\t\t\t\t\tisDisabled={isDisabled}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={style.actions}>Actions</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t{packs.length\r\n\t\t\t\t\t? packsRender\r\n\t\t\t\t\t: <h2 className={style.emptyItems}>This pack is empty</h2>}\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tpageCount={pageCount}\r\n\t\t\t\t\tpage={page}\r\n\t\t\t\t\thandleSetPageClick={handleSetPackPageClick}\r\n\t\t\t\t\thandleSetPageCountChange={handleSetPackPageCountChange}\r\n\t\t\t\t\ttotalItemsCount={packsTotalCount}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"names":["Pack","userId","userName","packId","packName","cardsCount","packUpdated","isDisabled","dispatch","useAppDispatch","navigate","useNavigate","authorizedUserId","useSelector","selectAuthorizedUserId","useState","isPackModalActive","setIsPackModalActive","isDeleteModalActive","setIsDeleteModalActive","EMPTY_STRING","updatedPackName","setUpdatedPackName","errorMessage","setErrorMessage","updatedPackNameInputRef","useRef","isOwner","handleDeactivatePackModalClick","handleDeactivateDeleteModalClick","isModalActive","onDeactivateModalClick","value","onSaveClick","updatedPackNameTrimmed","trim","packNameTrimmed","updatePackName","ERROR_MESSAGE","title","ref","name","onDeleteClick","removePack","className","style","onClick","Path","disabled","convertDate","onActivateDeleteModalClick","onActivateEditModalClick","current","focus","selectPacks","state","packs","selectSearchPackValue","searchPackValue","selectSortValue","sortValue","selectMinValue","minValue","selectMaxValue","maxValue","selectMinCardsCount","minCardsCount","selectMaxCardsCount","maxCardsCount","selectPageCount","pageCount","selectPage","page","selectSelectedPack","selectedPack","selectPacksTotalCount","packsTotalCount","Packs","isAuth","selectIsAuth","selectIsDisabled","isActiveModal","setIsActiveModal","setPackName","isPackPrivate","setIsPackPrivate","namePackInputRef","packsRender","map","_id","updated","user_name","user_id","useEffect","getPacks","sortPacks","min","max","handleSetMinAndMaxValueMouseUp","useCallback","setMaxAndMinValue","resetModalValues","handleDeactivateModalClick","addPack","isLabelItem","primary","additionalPrimaryBtn","searchValue","handleSetSearchValueChange","setSearchPackValue","handleResetSearchValueClick","resetValue","maxDefaultValue","minDefaultValue","onSetMinAndMaxValueMouseUp","sortValues","sortByDescending","sortByAscending","handleSortByAscendingClick","setSortValue","handleSortByDescendingClick","length","handleSetPageClick","setPackPage","handleSetPageCountChange","setPackPageCount","totalItemsCount","to"],"sourceRoot":""}